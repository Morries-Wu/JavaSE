创建型模式
单例模式、工厂模式、抽象工厂模式、建造者模式、原型模式
结构型模式
适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式

单例模式:
核心作用:保证一个类只有一个实例,并且提供一个访问该实例的全局访问点

单例模式的优点:
由于单例模式只生成一个实例,减少了系统性能开销,当一个对象的产生需要比较多的资源时,如读取配置、产生其他依赖对象时,则可以通过应用
启动时直接产生一个单例对象,然后永久驻留内存的方式来解决


常见的五种单例模式实现方式:
主要:
饿汉式(线程安全,调用效率高。但是,不能延时加载)
懒汉式(线程安全,调用效率不高。但是,可以延时加载)
其他:
双重检测锁式(由于JVM底层内部模式原因,偶尔会出问题。不建议用)
静态内部类式(线程安全,调用效率高。但是,可以延时加载)
枚举单例(线程安全,调用效率高,不能延时加载,并且可以天然的防止反射和反序列化漏洞)

懒加载、线程安全、调用效率高
