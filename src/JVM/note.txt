虚拟机概念
系统虚拟机(VMware)
程序虚拟机JVM

JVM定义
JVM是Java平台的基石,与操作系统、硬件无关、
JVM有自己的指令集、有运行时内存管理
JVM与Java语法没有必然的联系、只与class字节码有必然联系

JVM规范
Java虚拟机规范是官方给出的整个框架的设计和约定
Java虚拟机规范规定的不同的版本规范有一些差别

Class文件理解
Java虚拟机只认class文件
class文件中包含:指令集、符号表、其他信息
class文件与类的关系:一个class文件对应唯一一个类或者接口
                 一个类或者接口不一定只能是class文件,因为还有动态代理,也就是类加载器直接生成出来
Class文件格式
每个Class文件都由字节流组成
每个字节含有8个二进制位所有16位、32位、64位长度数据将通过构造成2个、4个、和8个连续的8位字节来表示

多字节数据项总是按照(大端在前)的顺序进行存储
大端在前:数据的低位保存在内存的高地址中,而数据的高位保存在内存的低地址中
Class文件是大端模式存储

Class文件的数据结构
类似于C语言的结构体
数据类型:无符数u1、u2、u4
       表(复合数据类型)结尾是_info
       数组表示

魔数的作用:区分文件类型[从文件内容角度出发]
文件内容起始几个字节使用固定的内容来描述该文件类型,因此这几个字节的内容称为魔数
class文件的魔数值 u4
                CAFEBABE
魔数利用
文件大致分为两种类型
文本文件[没有魔数值]
二进制文件
利用魔数判断文件的真实类型
利用魔数判断上传文件的真实类型

常量池总数
常量池大小(cp_info_count):常量池是class文件中第一个出现的变长结构,既然是池,就有大小,常量池大小由两个字节表示(u2)
常量池[静态常量池(很多时候我们说的静态常量池指的就是class文件中的常量池)]

常量池中主要存放的两大类常量:
字面量
字符串(UTF-8)、被声明为final的常量值(整数值、浮点等)
符号引用


常量池是一个数组,里面每一个项为一个具体的常量








